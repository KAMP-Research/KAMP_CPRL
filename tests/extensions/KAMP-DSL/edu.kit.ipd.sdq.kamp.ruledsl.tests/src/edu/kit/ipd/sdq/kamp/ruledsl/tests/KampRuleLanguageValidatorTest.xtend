/*
 * generated by Xtext 2.12.0
 */
package edu.kit.ipd.sdq.kamp.ruledsl.tests

import com.google.inject.Inject
import edu.kit.ipd.sdq.kamp.ruledsl.kampRuleLanguage.KampRuleLanguagePackage
import edu.kit.ipd.sdq.kamp.ruledsl.kampRuleLanguage.RuleFile
import edu.kit.ipd.sdq.kamp.ruledsl.validation.KampRuleLanguageValidator
import org.eclipse.xtext.junit4.ui.AbstractWorkbenchTest
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.eclipse.xtext.testing.validation.ValidationTestHelper
import org.junit.Before
import org.junit.Test
import org.junit.runner.RunWith

// this file contais some exemplary tests to check if validator work as expected
// validators are used to check the static semantics of the language
@RunWith(XtextRunner)
@InjectWith(KampRuleLanguageInjectorProvider) 
class KampRuleLanguageValidatorTest extends AbstractWorkbenchTest {
	@Inject extension ParseHelper<RuleFile>
	@Inject extension ValidationTestHelper
	
	val TEST_PROJECT_NAME = "test"
	
	/**
	 * Tests if a validation error is thrown with correct description
	 * if a model file is referenced which is not available.
	 */
	@Test
	def void testErrorOnUnresolvedModelImport() {
		'''
			import-model "/Example/cocome-cloud.allocation"
		'''.parse.assertError(
			KampRuleLanguagePackage.Literals.MODEL_IMPORT,
			KampRuleLanguageValidator.INVALID_IMPORT_FILE_NOT_FOUND
		)
	}
	
	/**
	 * Tests if a validator error is thrown if an invalid model file was provided.
	 * Notice the ">" missing in "<xml>" tag? This causes a syntactically invalid xmi file.
	 */
	@Test
	def void testErrorOnInvalidModelFileImport() {		
		val content = "<?xml version=\"1.0\" encoding=\"UTF-8\"?\n<allocation:Allocation xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:allocation=\"http://palladiosimulator.org/PalladioComponentModel/Allocation/5.2\" id=\"_Tj26cA1vEemksZri92im1g\"/>"
		val filename = "test.allocation"
		
		// add the file from test resources into test workspace
		ResourcesSetupUtil.createFile(TEST_PROJECT_NAME + "/resources/" + filename, content)
		
		'''
			import-model "/«TEST_PROJECT_NAME»/resources/«filename»" as model
		'''.parse.assertError(
			KampRuleLanguagePackage.Literals.MODEL_IMPORT,
			KampRuleLanguageValidator.INVALID_IMPORT_UNCAUGHT_ERROR
		)
	}
	
	/**
	 * Tests if no validation is thrown if model import is valid.
	 */
	@Test
	def void testNoValidationErrorOnValidModel() {		
		val content = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<allocation:Allocation xmi:version=\"2.0\" xmlns:xmi=\"http://www.omg.org/XMI\" xmlns:allocation=\"http://palladiosimulator.org/PalladioComponentModel/Allocation/5.2\" id=\"_Tj26cA1vEemksZri92im1g\"/>"
		val filename = "test.allocation"
		
		// add the file from test resources into test workspace
		ResourcesSetupUtil.createFile(TEST_PROJECT_NAME + "/resources/" + filename, content)
		
		'''
			import-model "/«TEST_PROJECT_NAME»/resources/«filename»" as model
		'''.parse.assertNoErrors
	}
	
	@Before
	override void setUp() {
		super.setUp
		
		// create a java project as holder for the file
		ResourcesSetupUtil.createProject(TEST_PROJECT_NAME)
	}
}
