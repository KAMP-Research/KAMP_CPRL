/*
 * generated by Xtext 2.12.0
 */
package edu.kit.ipd.sdq.kamp.ruledsl.tests

import com.google.inject.Inject
import edu.kit.ipd.sdq.kamp.ruledsl.kampRuleLanguage.RuleFile
import org.eclipse.xtext.testing.InjectWith
import org.eclipse.xtext.testing.XtextRunner
import org.eclipse.xtext.testing.util.ParseHelper
import org.junit.Test
import org.junit.runner.RunWith

import static extension org.junit.Assert.*

// this file contais some exemplary tests to check if the generated AST represents the given rule file
// the following presentation was used to set this test suite up:
// https://www.eclipsecon.org/france2015/sites/default/files/slides/presentation.pdf
@RunWith(XtextRunner)
@InjectWith(KampRuleLanguageInjectorProvider) 
class KampRuleLanguageParsingTest {
	@Inject extension ParseHelper<RuleFile>

	/**
	 * An empty file is allowed and should not yield an error.
	 */
	@Test
	def void testEmptyFile() {
		val result = ''''''.parse
		result.assertNotNull
		result.eResource.errors.isEmpty.assertTrue
	}
	
	/**
	 * A single import should be parsed properly.
	 */
	@Test
	def void testMetaclassImport() {
		val name = "pcm";
		val packageUri = "http://palladiosimulator.org/PalladioComponentModel/5.2";
		
		val result = '''
			// we refer to the palladio component model (version 5.2)
			import "«packageUri»" as «name»
		'''.parse

		result.eResource.errors.isEmpty.assertTrue
		result.metamodelImports.length.assertEquals(1)
		
		var metamodelImport = result.metamodelImports.get(0)
		
		metamodelImport.assertNotNull
		metamodelImport.name.assertEquals(name)
		metamodelImport.package.nsURI.assertEquals(packageUri)
	}
	
	/**
	 * An import must consist of a name.
	 */
	@Test
	def void testMetaclassImportNameRequirement() {
		val packageUri = "http://palladiosimulator.org/PalladioComponentModel/5.2";
		
		val result = '''
			// we refer to the palladio component model (version 5.2)
			import "«packageUri»"
		'''.parse

		result.metamodelImports.length.assertEquals(1)
		
		var metamodelImport = result.metamodelImports.get(0)
		
		metamodelImport.assertNotNull
		metamodelImport.package.nsURI.assertEquals(packageUri)
		result.eResource.errors.length.assertEquals(1)
		result.eResource.errors.get(0).line.assertEquals(2)
	}
	
}
