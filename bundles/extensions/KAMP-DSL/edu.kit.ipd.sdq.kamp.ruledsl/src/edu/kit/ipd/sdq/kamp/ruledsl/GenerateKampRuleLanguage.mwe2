module edu.kit.ipd.sdq.kamp.ruledsl.GenerateKampRuleLanguage

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.emf.mwe.utils.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."
var projectName = "edu.kit.ipd.sdq.kamp.ruledsl"
var runtimeProject = "../${projectName}"

Workflow {
	bean = StandaloneSetup {
    	scanClassPath = true
    	platformUri = "${runtimeProject}/.."
    	registerGeneratedEPackage = "org.eclipse.xtext.xbase.XbasePackage"
    	registerGenModelFile = "platform:/resource/org.eclipse.xtext.xbase/model/Xbase.genmodel"
    
    	resourceSet = org.eclipse.xtext.resource.XtextResourceSet:theResourceSet {}
    	// add mappings from platform:/resource to classpath:/
		  uriMap = {
		    from = "platform:/resource/org.eclipse.xtext.xbase/"
		    to = "classpath:/"
		  }
		  uriMap = {
		    from = "platform:/resource/org.eclipse.xtext.common.types/"
		    to = "classpath:/"
		  }
//		  uriMap = {
//		    from = "platform:/resource/tools.vitruv.dsls.mirbase/"
//		    to = "classpath:/"
//		  } 
    }
    
    component = DirectoryCleaner {
    	directory = "${runtimeProject}/src-gen"
    }
    
    component = DirectoryCleaner {
    	directory = "${runtimeProject}/model/generated"
    }
    
	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "edu.kit.ipd.sdq.kamp.ruledsl"
				rootPath = rootPath
				eclipsePlugin = {
					enabled = true
				}
				createEclipseMetaData = true
			}
			code = {
				encoding = "UTF-8"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}   	
		}
		language = StandardLanguage {
			name = "edu.kit.ipd.sdq.kamp.ruledsl.KampRuleLanguage"
			fileExtensions = "karl"
			referencedResource = "platform:/resource/tools.vitruv.dsls.mirbase/model/generated/MirBase.genmodel"
  		
			serializer = {
				generateStub = false
			}
			validator = {
				// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}
		}
	}
}
